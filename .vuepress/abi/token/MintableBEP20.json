{
  "contractName": "MintableBEP20",
  "abi": [
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "symbol",
          "type": "string"
        },
        {
          "internalType": "uint8",
          "name": "decimals",
          "type": "uint8"
        },
        {
          "internalType": "uint256",
          "name": "cap",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "initialBalance",
          "type": "uint256"
        },
        {
          "internalType": "address payable",
          "name": "feeReceiver",
          "type": "address"
        }
      ],
      "stateMutability": "payable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Approval",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "MintFinished",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "from",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "to",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "value",
          "type": "uint256"
        }
      ],
      "name": "Transfer",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "owner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        }
      ],
      "name": "allowance",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "approve",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "balanceOf",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "decimals",
      "outputs": [
        {
          "internalType": "uint8",
          "name": "",
          "type": "uint8"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "subtractedValue",
          "type": "uint256"
        }
      ],
      "name": "decreaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "finishMinting",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getOwner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "spender",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "addedValue",
          "type": "uint256"
        }
      ],
      "name": "increaseAllowance",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "mint",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "mintingFinished",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "name",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "symbol",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalSupply",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transfer",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "sender",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "transferFrom",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": "0x608060408190526008805460ff1916905562001480388190039081908339810160408190526200002f91620004e1565b604080518082018252600d81526c04d696e7461626c65424550323609c1b6020820152600080546001600160a01b0319163390811782559251849387928b928b929182917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908290a3508151620000ae906004906020850190620003ac565b508051620000c4906005906020840190620003ac565b50506006805460ff191660121790555080620001275760405162461bcd60e51b815260206004820152601560248201527f42455032304361707065643a206361702069732030000000000000000000000060448201526064015b60405180910390fd5b6007556040516315b36b9760e11b81526001600160a01b03831690632b66d72e9034906200015a90859060040162000595565b6000604051808303818588803b1580156200017457600080fd5b505af115801562000189573d6000803e3d6000fd5b50505050505050620001a184620001b960201b60201c565b620001ad3383620001cf565b50505050505062000675565b6006805460ff191660ff92909216919091179055565b6000546001600160a01b031633146200022b5760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016200011e565b6200024282826200024660201b620006ce1760201c565b5050565b600754816200025460035490565b620002609190620005ca565b1115620002b05760405162461bcd60e51b815260206004820152601960248201527f42455032304361707065643a206361702065786365656465640000000000000060448201526064016200011e565b620002428282620002c760201b620007391760201c565b6001600160a01b0382166200031f5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016200011e565b8060036000828254620003339190620005ca565b90915550506001600160a01b0382166000908152600160205260408120805483929062000362908490620005ca565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b828054620003ba9062000622565b90600052602060002090601f016020900481019282620003de576000855562000429565b82601f10620003f957805160ff191683800117855562000429565b8280016001018555821562000429579182015b82811115620004295782518255916020019190600101906200040c565b50620004379291506200043b565b5090565b5b808211156200043757600081556001016200043c565b600082601f83011262000463578081fd5b81516001600160401b03808211156200048057620004806200065f565b604051601f8301601f19908116603f01168101908282118183101715620004ab57620004ab6200065f565b81604052838152866020858801011115620004c4578485fd5b620004d7846020830160208901620005ef565b9695505050505050565b60008060008060008060c08789031215620004fa578182fd5b86516001600160401b038082111562000511578384fd5b6200051f8a838b0162000452565b9750602089015191508082111562000535578384fd5b506200054489828a0162000452565b955050604087015160ff811681146200055b578283fd5b6060880151608089015160a08a015192965090945092506001600160a01b038116811462000587578182fd5b809150509295509295509295565b6000602082528251806020840152620005b6816040850160208701620005ef565b601f01601f19169190910160400192915050565b60008219821115620005ea57634e487b7160e01b81526011600452602481fd5b500190565b60005b838110156200060c578181015183820152602001620005f2565b838111156200061c576000848401525b50505050565b600181811c908216806200063757607f821691505b602082108114156200065957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b610dfb80620006856000396000f3fe608060405234801561001057600080fd5b50600436106101215760003560e01c806370a08231116100ad57806395d89b411161007157806395d89b411461022d578063a457c2d714610235578063a9059cbb14610248578063dd62ed3e1461025b578063f2fde38b1461029457610121565b806370a08231146101d4578063715018a6146101e75780637d64bcb4146101ef578063893d20e8146101f75780638da5cb5b1461021c57610121565b806323b872dd116100f457806323b872dd1461017c578063313ce5671461018f578063355274ea146101a457806339509351146101ac57806340c10f19146101bf57610121565b806305d2035b1461012657806306fdde0314610142578063095ea7b31461015757806318160ddd1461016a575b600080fd5b60085460ff165b60405190151581526020015b60405180910390f35b61014a6102a7565b6040516101399190610c7b565b61012d610165366004610c52565b610339565b6003545b604051908152602001610139565b61012d61018a366004610c17565b61034f565b60065460405160ff9091168152602001610139565b60075461016e565b61012d6101ba366004610c52565b610405565b6101d26101cd366004610c52565b61043c565b005b61016e6101e2366004610bc4565b61046d565b6101d261048c565b6101d2610500565b6000546001600160a01b03165b6040516001600160a01b039091168152602001610139565b6000546001600160a01b0316610204565b61014a61052d565b61012d610243366004610c52565b61053c565b61012d610256366004610c52565b6105d7565b61016e610269366004610be5565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b6101d26102a2366004610bc4565b6105e4565b6060600480546102b690610d74565b80601f01602080910402602001604051908101604052809291908181526020018280546102e290610d74565b801561032f5780601f106103045761010080835404028352916020019161032f565b820191906000526020600020905b81548152906001019060200180831161031257829003601f168201915b5050505050905090565b6000610346338484610818565b50600192915050565b600061035c84848461093c565b6001600160a01b0384166000908152600260209081526040808320338452909152902054828110156103e65760405162461bcd60e51b815260206004820152602860248201527f42455032303a207472616e7366657220616d6f756e74206578636565647320616044820152676c6c6f77616e636560c01b60648201526084015b60405180910390fd5b6103fa85336103f58685610d5d565b610818565b506001949350505050565b3360008181526002602090815260408083206001600160a01b038716845290915281205490916103469185906103f5908690610d45565b60085460ff161561045f5760405162461bcd60e51b81526004016103dd90610cce565b6104698282610b14565b5050565b6001600160a01b0381166000908152600160205260409020545b919050565b6000546001600160a01b031633146104b65760405162461bcd60e51b81526004016103dd90610d10565b600080546040516001600160a01b03909116907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0908390a3600080546001600160a01b0319169055565b60085460ff16156105235760405162461bcd60e51b81526004016103dd90610cce565b61052b610b48565b565b6060600580546102b690610d74565b3360009081526002602090815260408083206001600160a01b0386168452909152812054828110156105be5760405162461bcd60e51b815260206004820152602560248201527f42455032303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084016103dd565b6105cd33856103f58685610d5d565b5060019392505050565b600061034633848461093c565b6000546001600160a01b0316331461060e5760405162461bcd60e51b81526004016103dd90610d10565b6001600160a01b0381166106735760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016103dd565b600080546040516001600160a01b03808516939216917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e091a3600080546001600160a01b0319166001600160a01b0392909216919091179055565b600754816106db60035490565b6106e59190610d45565b11156107335760405162461bcd60e51b815260206004820152601960248201527f42455032304361707065643a206361702065786365656465640000000000000060448201526064016103dd565b61046982825b6001600160a01b03821661078f5760405162461bcd60e51b815260206004820152601f60248201527f42455032303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016103dd565b80600360008282546107a19190610d45565b90915550506001600160a01b038216600090815260016020526040812080548392906107ce908490610d45565b90915550506040518181526001600160a01b038316906000907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef9060200160405180910390a35050565b6001600160a01b03831661087a5760405162461bcd60e51b8152602060048201526024808201527f42455032303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016103dd565b6001600160a01b0382166108db5760405162461bcd60e51b815260206004820152602260248201527f42455032303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016103dd565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925910160405180910390a3505050565b6001600160a01b0383166109a05760405162461bcd60e51b815260206004820152602560248201527f42455032303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016103dd565b6001600160a01b038216610a025760405162461bcd60e51b815260206004820152602360248201527f42455032303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016103dd565b6001600160a01b03831660009081526001602052604090205481811015610a7a5760405162461bcd60e51b815260206004820152602660248201527f42455032303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016103dd565b610a848282610d5d565b6001600160a01b038086166000908152600160205260408082209390935590851681529081208054849290610aba908490610d45565b92505081905550826001600160a01b0316846001600160a01b03167fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef84604051610b0691815260200190565b60405180910390a350505050565b6000546001600160a01b03163314610b3e5760405162461bcd60e51b81526004016103dd90610d10565b61046982826106ce565b6000546001600160a01b03163314610b725760405162461bcd60e51b81526004016103dd90610d10565b61052b6008805460ff191660011790556040517fae5184fba832cb2b1f702aca6117b8d265eaf03ad33eb133f19dde0f5920fa0890600090a1565b80356001600160a01b038116811461048757600080fd5b600060208284031215610bd5578081fd5b610bde82610bad565b9392505050565b60008060408385031215610bf7578081fd5b610c0083610bad565b9150610c0e60208401610bad565b90509250929050565b600080600060608486031215610c2b578081fd5b610c3484610bad565b9250610c4260208501610bad565b9150604084013590509250925092565b60008060408385031215610c64578182fd5b610c6d83610bad565b946020939093013593505050565b6000602080835283518082850152825b81811015610ca757858101830151858201604001528201610c8b565b81811115610cb85783604083870101525b50601f01601f1916929092016040019392505050565b60208082526022908201527f42455032304d696e7461626c653a206d696e74696e672069732066696e697368604082015261195960f21b606082015260800190565b6020808252818101527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604082015260600190565b60008219821115610d5857610d58610daf565b500190565b600082821015610d6f57610d6f610daf565b500390565b600181811c90821680610d8857607f821691505b60208210811415610da957634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052601160045260246000fdfea26469706673582212202d8d0e2b9cad40a624d30a25273f9e4725373f3f1673f251833caf0cbe70471164736f6c63430008030033",
  "compiler": {
    "name": "solc",
    "version": "0.8.3+commit.8d00100c.Emscripten.clang"
  },
  "devdoc": {
    "details": "Implementation of the MintableBEP20",
    "kind": "dev",
    "methods": {
      "allowance(address,address)": {
        "details": "See {IBEP20-allowance}."
      },
      "approve(address,uint256)": {
        "details": "See {IBEP20-approve}. Requirements: - `spender` cannot be the zero address."
      },
      "balanceOf(address)": {
        "details": "See {IBEP20-balanceOf}."
      },
      "cap()": {
        "details": "Returns the cap on the token's total supply."
      },
      "decimals()": {
        "details": "Returns the number of decimals used to get its user representation. For example, if `decimals` equals `2`, a balance of `505` tokens should be displayed to a user as `5,05` (`505 / 10 ** 2`). Tokens usually opt for a value of 18, imitating the relationship between Ether and Wei. This is the value {BEP20} uses, unless {_setupDecimals} is called. NOTE: This information is only used for _display_ purposes: it in no way affects any of the arithmetic of the contract, including {IBEP20-balanceOf} and {IBEP20-transfer}."
      },
      "decreaseAllowance(address,uint256)": {
        "details": "Atomically decreases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address. - `spender` must have allowance for the caller of at least `subtractedValue`."
      },
      "finishMinting()": {
        "details": "Function to stop minting new tokens. WARNING: it allows everyone to finish minting. Access controls MUST be defined in derived contracts."
      },
      "getOwner()": {
        "details": "See {IBEP20-getOwner}."
      },
      "increaseAllowance(address,uint256)": {
        "details": "Atomically increases the allowance granted to `spender` by the caller. This is an alternative to {approve} that can be used as a mitigation for problems described in {IBEP20-approve}. Emits an {Approval} event indicating the updated allowance. Requirements: - `spender` cannot be the zero address."
      },
      "mint(address,uint256)": {
        "details": "Function to mint tokens. WARNING: it allows everyone to mint new tokens. Access controls MUST be defined in derived contracts.",
        "params": {
          "account": "The address that will receive the minted tokens",
          "amount": "The amount of tokens to mint"
        }
      },
      "mintingFinished()": {
        "returns": {
          "_0": "if minting is finished or not."
        }
      },
      "name()": {
        "details": "Returns the name of the token."
      },
      "owner()": {
        "details": "Returns the address of the current owner."
      },
      "renounceOwnership()": {
        "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
      },
      "symbol()": {
        "details": "Returns the symbol of the token, usually a shorter version of the name."
      },
      "totalSupply()": {
        "details": "See {IBEP20-totalSupply}."
      },
      "transfer(address,uint256)": {
        "details": "See {IBEP20-transfer}. Requirements: - `recipient` cannot be the zero address. - the caller must have a balance of at least `amount`."
      },
      "transferFrom(address,address,uint256)": {
        "details": "See {IBEP20-transferFrom}. Emits an {Approval} event indicating the updated allowance. This is not required by the EIP. See the note at the beginning of {BEP20}. Requirements: - `sender` and `recipient` cannot be the zero address. - `sender` must have a balance of at least `amount`. - the caller must have allowance for ``sender``'s tokens of at least `amount`."
      },
      "transferOwnership(address)": {
        "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
      }
    },
    "title": "MintableBEP20",
    "version": 1
  }
}
